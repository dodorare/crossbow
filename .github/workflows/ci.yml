name: CI

on:
  push:
    branches: [master]
    paths:
    - '.github/workflows/ci.yml'
    - '**.rs'
    - '**.toml'
  pull_request:
    paths:
    - '.github/workflows/ci.yml'
    - '**.rs'
    - '**.toml'

jobs:

  android-build-ubuntu:
    name: Build Android example on Ubuntu latest
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Install Android targets
      run: rustup target add armv7-linux-androideabi aarch64-linux-android i686-linux-android x86_64-linux-android
    - name: Install Crossbundle
      run: cargo install --git=https://github.com/dodorare/crossbow crossbundle
    - name: Build APK
      run: |
        cd examples/bevy-3d
        crossbundle build android --release

  apple-build-ubuntu:
    name: Build Apple example on macOS latest
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@master
    - name: Install Apple targets
      run: rustup target add aarch64-apple-ios x86_64-apple-ios
    - name: Install Crossbundle
      run: cargo install --git=https://github.com/dodorare/crossbow crossbundle
    - name: Build Apple app
      run: |
        cd examples/bevy-3d
        crossbundle build apple --release --target=x86_64-apple-ios

  test-crossbundle-new:
    name: Generate and Build from template on macOS latest
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@master
    - name: Install Apple targets
      run: rustup target add aarch64-apple-ios x86_64-apple-ios aarch64-linux-android x86_64-linux-android
    - name: Install Crossbundle
      run: |
        brew install openssl@1.1 cmake
        cargo install cargo-generate
        cargo install --git=https://github.com/dodorare/crossbow crossbundle
    - name: Generate project
      run: |
        cd ~
        crossbundle new explorer --template=fastlane-example
    - name: Build Apple app
      run: |
        cd ~/explorer/
        crossbundle build apple --release --target=x86_64-apple-ios

  clean:
    name: Check code format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: rustfmt, clippy
          override: true
      - name: Check the format
        run: cargo +nightly fmt --all -- --check
      - name: Run clippy
        run: cargo clippy --all-targets --all-features -- -D warnings -A clippy::unnecessary-unwrap -A clippy::too-many-arguments
      - name: Check for deadlinks
        run: |
          cargo install cargo-deadlinks
          cargo deadlinks --check-http
